{"ast":null,"code":"import { useEffect as $hPSQ5$useEffect } from \"react\";\nimport { useCallbackRef as $hPSQ5$useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\n\n/**\n * Listens for when the escape key is down\n */\nfunction $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp) {\n  var ownerDocument = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : globalThis === null || globalThis === void 0 ? void 0 : globalThis.document;\n  var onEscapeKeyDown = $hPSQ5$useCallbackRef(onEscapeKeyDownProp);\n  $hPSQ5$useEffect(function () {\n    var handleKeyDown = function handleKeyDown(event) {\n      if (event.key === 'Escape') onEscapeKeyDown(event);\n    };\n    ownerDocument.addEventListener('keydown', handleKeyDown);\n    return function () {\n      return ownerDocument.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onEscapeKeyDown, ownerDocument]);\n}\nexport { $addc16e1bbe58fd0$export$3a72a57244d6e765 as useEscapeKeydown };","map":{"version":3,"names":["$addc16e1bbe58fd0$export$3a72a57244d6e765","useEscapeKeydown","onEscapeKeyDownProp","ownerDocument","arguments","length","undefined","globalThis","document","onEscapeKeyDown","$hPSQ5$useCallbackRef","$hPSQ5$useEffect","handleKeyDown","event","key","addEventListener","removeEventListener"],"sources":["/Users/antonioponce-meza/Desktop/Portfolio/cool-portfolio/node_modules/@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/index.ts","/Users/antonioponce-meza/Desktop/Portfolio/cool-portfolio/node_modules/@radix-ui/react-use-escape-keydown/dist/packages/react/use-escape-keydown/src/useEscapeKeydown.tsx"],"sourcesContent":["export { useEscapeKeydown } from './useEscapeKeydown';\n","import * as React from 'react';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\n\n/**\n * Listens for when the escape key is down\n */\nfunction useEscapeKeydown(\n  onEscapeKeyDownProp?: (event: KeyboardEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const onEscapeKeyDown = useCallbackRef(onEscapeKeyDownProp);\n\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onEscapeKeyDown(event);\n      }\n    };\n    ownerDocument.addEventListener('keydown', handleKeyDown);\n    return () => ownerDocument.removeEventListener('keydown', handleKeyDown);\n  }, [onEscapeKeyDown, ownerDocument]);\n}\n\nexport { useEscapeKeydown };\n"],"mappings":";;;ACGA;;;AAGA,SAASA,yCAATC,CACEC,mBADF,EAGE;EAAA,IADAC,aAAuB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGG,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEC,QAFxC;EAIE,IAAMC,eAAe,GAAGC,qBAAc,CAACR,mBAAD,CAAtC;EAEAS,gBAAA,CAAgB,YAAM;IACpB,IAAMC,aAAa,GAAI,SAAjBA,aAAaA,CAAIC,KAAD,EAA0B;MAC9C,IAAIA,KAAK,CAACC,GAAN,KAAc,QAAlB,EACEL,eAAe,CAACI,KAAD,CAAf;KAFJ;IAKAV,aAAa,CAACY,gBAAd,CAA+B,SAA/B,EAA0CH,aAA1C;IACA,OAAO;MAAA,OAAMT,aAAa,CAACa,mBAAd,CAAkC,SAAlC,EAA6CJ,aAA7C,CAAb;IAAA;GAPF,EAQG,CAACH,eAAD,EAAkBN,aAAlB,CARH,CAQC"},"metadata":{},"sourceType":"module","externalDependencies":[]}